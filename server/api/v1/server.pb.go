// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0-devel
// 	protoc        v3.11.4
// source: server.proto

package server

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Download struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// gorm.Model
	URL               string  `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"` //`gorm:"not null;unique;index:DownloadUrlBase64"` //base64
	FilePath          string  `protobuf:"bytes,2,opt,name=FilePath,proto3" json:"FilePath,omitempty"`
	FileName          string  `protobuf:"bytes,3,opt,name=FileName,proto3" json:"FileName,omitempty"`
	DownloadSize      int64   `protobuf:"varint,4,opt,name=DownloadSize,proto3" json:"DownloadSize,omitempty"`
	Progress          float64 `protobuf:"fixed64,5,opt,name=Progress,proto3" json:"Progress,omitempty"`
	FileSize          int64   `protobuf:"varint,6,opt,name=FileSize,proto3" json:"FileSize,omitempty"`
	ErrorReason       string  `protobuf:"bytes,7,opt,name=ErrorReason,proto3" json:"ErrorReason,omitempty"`
	FileRemoved       int32   `protobuf:"varint,8,opt,name=FileRemoved,proto3" json:"FileRemoved,omitempty"` //默认0 忽略 -1 否定 1 确定
	DownloadError     int32   `protobuf:"varint,9,opt,name=DownloadError,proto3" json:"DownloadError,omitempty"`
	Downloading       int32   `protobuf:"varint,10,opt,name=Downloading,proto3" json:"Downloading,omitempty"`
	Suspend           int32   `protobuf:"varint,11,opt,name=Suspend,proto3" json:"Suspend,omitempty"`
	DownloadFinish    int32   `protobuf:"varint,12,opt,name=DownloadFinish,proto3" json:"DownloadFinish,omitempty"`
	Trash             int32   `protobuf:"varint,13,opt,name=Trash,proto3" json:"Trash,omitempty"`
	OpsDelJob         int32   `protobuf:"varint,14,opt,name=OpsDelJob,proto3" json:"OpsDelJob,omitempty"`
	OpsDelJobComplete int32   `protobuf:"varint,15,opt,name=OpsDelJobComplete,proto3" json:"OpsDelJobComplete,omitempty"`
}

func (x *Download) Reset() {
	*x = Download{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Download) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Download) ProtoMessage() {}

func (x *Download) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Download.ProtoReflect.Descriptor instead.
func (*Download) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{0}
}

func (x *Download) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *Download) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *Download) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *Download) GetDownloadSize() int64 {
	if x != nil {
		return x.DownloadSize
	}
	return 0
}

func (x *Download) GetProgress() float64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *Download) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *Download) GetErrorReason() string {
	if x != nil {
		return x.ErrorReason
	}
	return ""
}

func (x *Download) GetFileRemoved() int32 {
	if x != nil {
		return x.FileRemoved
	}
	return 0
}

func (x *Download) GetDownloadError() int32 {
	if x != nil {
		return x.DownloadError
	}
	return 0
}

func (x *Download) GetDownloading() int32 {
	if x != nil {
		return x.Downloading
	}
	return 0
}

func (x *Download) GetSuspend() int32 {
	if x != nil {
		return x.Suspend
	}
	return 0
}

func (x *Download) GetDownloadFinish() int32 {
	if x != nil {
		return x.DownloadFinish
	}
	return 0
}

func (x *Download) GetTrash() int32 {
	if x != nil {
		return x.Trash
	}
	return 0
}

func (x *Download) GetOpsDelJob() int32 {
	if x != nil {
		return x.OpsDelJob
	}
	return 0
}

func (x *Download) GetOpsDelJobComplete() int32 {
	if x != nil {
		return x.OpsDelJobComplete
	}
	return 0
}

type AddTaskIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Link string `protobuf:"bytes,1,opt,name=Link,proto3" json:"Link,omitempty"`
}

func (x *AddTaskIn) Reset() {
	*x = AddTaskIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTaskIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTaskIn) ProtoMessage() {}

func (x *AddTaskIn) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTaskIn.ProtoReflect.Descriptor instead.
func (*AddTaskIn) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{1}
}

func (x *AddTaskIn) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

type AddTaskOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMsg string `protobuf:"bytes,1,opt,name=ErrorMsg,proto3" json:"ErrorMsg,omitempty"`
}

func (x *AddTaskOut) Reset() {
	*x = AddTaskOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTaskOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTaskOut) ProtoMessage() {}

func (x *AddTaskOut) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTaskOut.ProtoReflect.Descriptor instead.
func (*AddTaskOut) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{2}
}

func (x *AddTaskOut) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

//SelectDownLoadPath start
type SelectDownLoadPathIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SelectDownLoadPathIn) Reset() {
	*x = SelectDownLoadPathIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectDownLoadPathIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectDownLoadPathIn) ProtoMessage() {}

func (x *SelectDownLoadPathIn) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectDownLoadPathIn.ProtoReflect.Descriptor instead.
func (*SelectDownLoadPathIn) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{3}
}

type SelectDownLoadPathOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMsg string `protobuf:"bytes,1,opt,name=ErrorMsg,proto3" json:"ErrorMsg,omitempty"`
	PathDir  string `protobuf:"bytes,2,opt,name=PathDir,proto3" json:"PathDir,omitempty"`
}

func (x *SelectDownLoadPathOut) Reset() {
	*x = SelectDownLoadPathOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectDownLoadPathOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectDownLoadPathOut) ProtoMessage() {}

func (x *SelectDownLoadPathOut) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectDownLoadPathOut.ProtoReflect.Descriptor instead.
func (*SelectDownLoadPathOut) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{4}
}

func (x *SelectDownLoadPathOut) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *SelectDownLoadPathOut) GetPathDir() string {
	if x != nil {
		return x.PathDir
	}
	return ""
}

type GetDownloadingIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDownloadingIn) Reset() {
	*x = GetDownloadingIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDownloadingIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDownloadingIn) ProtoMessage() {}

func (x *GetDownloadingIn) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDownloadingIn.ProtoReflect.Descriptor instead.
func (*GetDownloadingIn) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{5}
}

type GetDownloadingOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMsg string      `protobuf:"bytes,1,opt,name=ErrorMsg,proto3" json:"ErrorMsg,omitempty"`
	Download []*Download `protobuf:"bytes,2,rep,name=Download,proto3" json:"Download,omitempty"`
}

func (x *GetDownloadingOut) Reset() {
	*x = GetDownloadingOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDownloadingOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDownloadingOut) ProtoMessage() {}

func (x *GetDownloadingOut) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDownloadingOut.ProtoReflect.Descriptor instead.
func (*GetDownloadingOut) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{6}
}

func (x *GetDownloadingOut) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *GetDownloadingOut) GetDownload() []*Download {
	if x != nil {
		return x.Download
	}
	return nil
}

type GetDownloadFinishIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDownloadFinishIn) Reset() {
	*x = GetDownloadFinishIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDownloadFinishIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDownloadFinishIn) ProtoMessage() {}

func (x *GetDownloadFinishIn) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDownloadFinishIn.ProtoReflect.Descriptor instead.
func (*GetDownloadFinishIn) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{7}
}

type GetDownloadFinishOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMsg string      `protobuf:"bytes,1,opt,name=ErrorMsg,proto3" json:"ErrorMsg,omitempty"`
	Download []*Download `protobuf:"bytes,2,rep,name=Download,proto3" json:"Download,omitempty"`
}

func (x *GetDownloadFinishOut) Reset() {
	*x = GetDownloadFinishOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDownloadFinishOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDownloadFinishOut) ProtoMessage() {}

func (x *GetDownloadFinishOut) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDownloadFinishOut.ProtoReflect.Descriptor instead.
func (*GetDownloadFinishOut) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{8}
}

func (x *GetDownloadFinishOut) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *GetDownloadFinishOut) GetDownload() []*Download {
	if x != nil {
		return x.Download
	}
	return nil
}

type GetTrashIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTrashIn) Reset() {
	*x = GetTrashIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrashIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrashIn) ProtoMessage() {}

func (x *GetTrashIn) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrashIn.ProtoReflect.Descriptor instead.
func (*GetTrashIn) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{9}
}

type GetTrashOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMsg string      `protobuf:"bytes,1,opt,name=ErrorMsg,proto3" json:"ErrorMsg,omitempty"`
	Download []*Download `protobuf:"bytes,2,rep,name=Download,proto3" json:"Download,omitempty"`
}

func (x *GetTrashOut) Reset() {
	*x = GetTrashOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrashOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrashOut) ProtoMessage() {}

func (x *GetTrashOut) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrashOut.ProtoReflect.Descriptor instead.
func (*GetTrashOut) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{10}
}

func (x *GetTrashOut) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *GetTrashOut) GetDownload() []*Download {
	if x != nil {
		return x.Download
	}
	return nil
}

// NotifySteam start
type NotifyStreamIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NotifyStreamIn) Reset() {
	*x = NotifyStreamIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyStreamIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyStreamIn) ProtoMessage() {}

func (x *NotifyStreamIn) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyStreamIn.ProtoReflect.Descriptor instead.
func (*NotifyStreamIn) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{11}
}

type NotifyStreamOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMsg string      `protobuf:"bytes,1,opt,name=ErrorMsg,proto3" json:"ErrorMsg,omitempty"`
	Download []*Download `protobuf:"bytes,2,rep,name=Download,proto3" json:"Download,omitempty"`
	Title    string      `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *NotifyStreamOut) Reset() {
	*x = NotifyStreamOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyStreamOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyStreamOut) ProtoMessage() {}

func (x *NotifyStreamOut) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyStreamOut.ProtoReflect.Descriptor instead.
func (*NotifyStreamOut) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{12}
}

func (x *NotifyStreamOut) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *NotifyStreamOut) GetDownload() []*Download {
	if x != nil {
		return x.Download
	}
	return nil
}

func (x *NotifyStreamOut) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

var File_server_proto protoreflect.FileDescriptor

var file_server_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0xe0, 0x03, 0x0a, 0x08, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x12,
	0x26, 0x0a, 0x0e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x73, 0x68,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x54, 0x72, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a,
	0x09, 0x4f, 0x70, 0x73, 0x44, 0x65, 0x6c, 0x4a, 0x6f, 0x62, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x4f, 0x70, 0x73, 0x44, 0x65, 0x6c, 0x4a, 0x6f, 0x62, 0x12, 0x2c, 0x0a, 0x11, 0x4f,
	0x70, 0x73, 0x44, 0x65, 0x6c, 0x4a, 0x6f, 0x62, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x4f, 0x70, 0x73, 0x44, 0x65, 0x6c, 0x4a, 0x6f,
	0x62, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x1f, 0x0a, 0x09, 0x41, 0x64, 0x64,
	0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x28, 0x0a, 0x0a, 0x41, 0x64,
	0x64, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x73, 0x67, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x6f,
	0x77, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x74, 0x68, 0x49, 0x6e, 0x22, 0x4d, 0x0a, 0x15,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x50, 0x61,
	0x74, 0x68, 0x4f, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73,
	0x67, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x74, 0x68, 0x44, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x50, 0x61, 0x74, 0x68, 0x44, 0x69, 0x72, 0x22, 0x12, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x22,
	0x5d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x4f, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67,
	0x12, 0x2c, 0x0a, 0x08, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x08, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x15,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x49, 0x6e, 0x22, 0x60, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x75, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x08, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x08, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x0c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x73, 0x68, 0x49, 0x6e, 0x22, 0x57, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x73,
	0x68, 0x4f, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67,
	0x12, 0x2c, 0x0a, 0x08, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x08, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x10,
	0x0a, 0x0e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e,
	0x22, 0x71, 0x0a, 0x0f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x4f, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x12,
	0x2c, 0x0a, 0x08, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x08, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x32, 0xb1, 0x03, 0x0a, 0x10, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x54,
	0x61, 0x73, 0x6b, 0x12, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64,
	0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x1a, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x41, 0x64, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x12,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x74, 0x68, 0x49, 0x6e,
	0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x44, 0x6f, 0x77, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x74, 0x68, 0x4f, 0x75, 0x74, 0x22,
	0x00, 0x12, 0x47, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x1a, 0x19, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12,
	0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x49, 0x6e, 0x1a, 0x1c, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x73, 0x68, 0x12, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x73, 0x68, 0x49, 0x6e, 0x1a, 0x13, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x73, 0x68, 0x4f, 0x75,
	0x74, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x74, 0x65,
	0x61, 0x6d, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x4f, 0x75, 0x74, 0x22, 0x00, 0x30, 0x01, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x3b, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_proto_rawDescOnce sync.Once
	file_server_proto_rawDescData = file_server_proto_rawDesc
)

func file_server_proto_rawDescGZIP() []byte {
	file_server_proto_rawDescOnce.Do(func() {
		file_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_proto_rawDescData)
	})
	return file_server_proto_rawDescData
}

var file_server_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_server_proto_goTypes = []interface{}{
	(*Download)(nil),              // 0: server.Download
	(*AddTaskIn)(nil),             // 1: server.AddTaskIn
	(*AddTaskOut)(nil),            // 2: server.AddTaskOut
	(*SelectDownLoadPathIn)(nil),  // 3: server.SelectDownLoadPathIn
	(*SelectDownLoadPathOut)(nil), // 4: server.SelectDownLoadPathOut
	(*GetDownloadingIn)(nil),      // 5: server.GetDownloadingIn
	(*GetDownloadingOut)(nil),     // 6: server.GetDownloadingOut
	(*GetDownloadFinishIn)(nil),   // 7: server.GetDownloadFinishIn
	(*GetDownloadFinishOut)(nil),  // 8: server.GetDownloadFinishOut
	(*GetTrashIn)(nil),            // 9: server.GetTrashIn
	(*GetTrashOut)(nil),           // 10: server.GetTrashOut
	(*NotifyStreamIn)(nil),        // 11: server.NotifyStreamIn
	(*NotifyStreamOut)(nil),       // 12: server.NotifyStreamOut
}
var file_server_proto_depIdxs = []int32{
	0,  // 0: server.GetDownloadingOut.Download:type_name -> server.Download
	0,  // 1: server.GetDownloadFinishOut.Download:type_name -> server.Download
	0,  // 2: server.GetTrashOut.Download:type_name -> server.Download
	0,  // 3: server.NotifyStreamOut.Download:type_name -> server.Download
	1,  // 4: server.DownloadProvider.AddTask:input_type -> server.AddTaskIn
	3,  // 5: server.DownloadProvider.SelectDownLoadPath:input_type -> server.SelectDownLoadPathIn
	5,  // 6: server.DownloadProvider.GetDownloading:input_type -> server.GetDownloadingIn
	7,  // 7: server.DownloadProvider.GetDownloadFinish:input_type -> server.GetDownloadFinishIn
	9,  // 8: server.DownloadProvider.GetTrash:input_type -> server.GetTrashIn
	11, // 9: server.DownloadProvider.NotifySteam:input_type -> server.NotifyStreamIn
	2,  // 10: server.DownloadProvider.AddTask:output_type -> server.AddTaskOut
	4,  // 11: server.DownloadProvider.SelectDownLoadPath:output_type -> server.SelectDownLoadPathOut
	6,  // 12: server.DownloadProvider.GetDownloading:output_type -> server.GetDownloadingOut
	8,  // 13: server.DownloadProvider.GetDownloadFinish:output_type -> server.GetDownloadFinishOut
	10, // 14: server.DownloadProvider.GetTrash:output_type -> server.GetTrashOut
	12, // 15: server.DownloadProvider.NotifySteam:output_type -> server.NotifyStreamOut
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_server_proto_init() }
func file_server_proto_init() {
	if File_server_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Download); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTaskIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTaskOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectDownLoadPathIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectDownLoadPathOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDownloadingIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDownloadingOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDownloadFinishIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDownloadFinishOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrashIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrashOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyStreamIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyStreamOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_server_proto_goTypes,
		DependencyIndexes: file_server_proto_depIdxs,
		MessageInfos:      file_server_proto_msgTypes,
	}.Build()
	File_server_proto = out.File
	file_server_proto_rawDesc = nil
	file_server_proto_goTypes = nil
	file_server_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DownloadProviderClient is the client API for DownloadProvider service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DownloadProviderClient interface {
	AddTask(ctx context.Context, in *AddTaskIn, opts ...grpc.CallOption) (*AddTaskOut, error)
	SelectDownLoadPath(ctx context.Context, in *SelectDownLoadPathIn, opts ...grpc.CallOption) (*SelectDownLoadPathOut, error)
	GetDownloading(ctx context.Context, in *GetDownloadingIn, opts ...grpc.CallOption) (*GetDownloadingOut, error)
	GetDownloadFinish(ctx context.Context, in *GetDownloadFinishIn, opts ...grpc.CallOption) (*GetDownloadFinishOut, error)
	GetTrash(ctx context.Context, in *GetTrashIn, opts ...grpc.CallOption) (*GetTrashOut, error)
	NotifySteam(ctx context.Context, in *NotifyStreamIn, opts ...grpc.CallOption) (DownloadProvider_NotifySteamClient, error)
}

type downloadProviderClient struct {
	cc grpc.ClientConnInterface
}

func NewDownloadProviderClient(cc grpc.ClientConnInterface) DownloadProviderClient {
	return &downloadProviderClient{cc}
}

func (c *downloadProviderClient) AddTask(ctx context.Context, in *AddTaskIn, opts ...grpc.CallOption) (*AddTaskOut, error) {
	out := new(AddTaskOut)
	err := c.cc.Invoke(ctx, "/server.DownloadProvider/AddTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *downloadProviderClient) SelectDownLoadPath(ctx context.Context, in *SelectDownLoadPathIn, opts ...grpc.CallOption) (*SelectDownLoadPathOut, error) {
	out := new(SelectDownLoadPathOut)
	err := c.cc.Invoke(ctx, "/server.DownloadProvider/SelectDownLoadPath", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *downloadProviderClient) GetDownloading(ctx context.Context, in *GetDownloadingIn, opts ...grpc.CallOption) (*GetDownloadingOut, error) {
	out := new(GetDownloadingOut)
	err := c.cc.Invoke(ctx, "/server.DownloadProvider/GetDownloading", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *downloadProviderClient) GetDownloadFinish(ctx context.Context, in *GetDownloadFinishIn, opts ...grpc.CallOption) (*GetDownloadFinishOut, error) {
	out := new(GetDownloadFinishOut)
	err := c.cc.Invoke(ctx, "/server.DownloadProvider/GetDownloadFinish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *downloadProviderClient) GetTrash(ctx context.Context, in *GetTrashIn, opts ...grpc.CallOption) (*GetTrashOut, error) {
	out := new(GetTrashOut)
	err := c.cc.Invoke(ctx, "/server.DownloadProvider/GetTrash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *downloadProviderClient) NotifySteam(ctx context.Context, in *NotifyStreamIn, opts ...grpc.CallOption) (DownloadProvider_NotifySteamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DownloadProvider_serviceDesc.Streams[0], "/server.DownloadProvider/NotifySteam", opts...)
	if err != nil {
		return nil, err
	}
	x := &downloadProviderNotifySteamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DownloadProvider_NotifySteamClient interface {
	Recv() (*NotifyStreamOut, error)
	grpc.ClientStream
}

type downloadProviderNotifySteamClient struct {
	grpc.ClientStream
}

func (x *downloadProviderNotifySteamClient) Recv() (*NotifyStreamOut, error) {
	m := new(NotifyStreamOut)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DownloadProviderServer is the server API for DownloadProvider service.
type DownloadProviderServer interface {
	AddTask(context.Context, *AddTaskIn) (*AddTaskOut, error)
	SelectDownLoadPath(context.Context, *SelectDownLoadPathIn) (*SelectDownLoadPathOut, error)
	GetDownloading(context.Context, *GetDownloadingIn) (*GetDownloadingOut, error)
	GetDownloadFinish(context.Context, *GetDownloadFinishIn) (*GetDownloadFinishOut, error)
	GetTrash(context.Context, *GetTrashIn) (*GetTrashOut, error)
	NotifySteam(*NotifyStreamIn, DownloadProvider_NotifySteamServer) error
}

// UnimplementedDownloadProviderServer can be embedded to have forward compatible implementations.
type UnimplementedDownloadProviderServer struct {
}

func (*UnimplementedDownloadProviderServer) AddTask(context.Context, *AddTaskIn) (*AddTaskOut, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddTask not implemented")
}
func (*UnimplementedDownloadProviderServer) SelectDownLoadPath(context.Context, *SelectDownLoadPathIn) (*SelectDownLoadPathOut, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SelectDownLoadPath not implemented")
}
func (*UnimplementedDownloadProviderServer) GetDownloading(context.Context, *GetDownloadingIn) (*GetDownloadingOut, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDownloading not implemented")
}
func (*UnimplementedDownloadProviderServer) GetDownloadFinish(context.Context, *GetDownloadFinishIn) (*GetDownloadFinishOut, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDownloadFinish not implemented")
}
func (*UnimplementedDownloadProviderServer) GetTrash(context.Context, *GetTrashIn) (*GetTrashOut, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTrash not implemented")
}
func (*UnimplementedDownloadProviderServer) NotifySteam(*NotifyStreamIn, DownloadProvider_NotifySteamServer) error {
	return status.Errorf(codes.Unimplemented, "method NotifySteam not implemented")
}

func RegisterDownloadProviderServer(s *grpc.Server, srv DownloadProviderServer) {
	s.RegisterService(&_DownloadProvider_serviceDesc, srv)
}

func _DownloadProvider_AddTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddTaskIn)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DownloadProviderServer).AddTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.DownloadProvider/AddTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DownloadProviderServer).AddTask(ctx, req.(*AddTaskIn))
	}
	return interceptor(ctx, in, info, handler)
}

func _DownloadProvider_SelectDownLoadPath_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SelectDownLoadPathIn)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DownloadProviderServer).SelectDownLoadPath(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.DownloadProvider/SelectDownLoadPath",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DownloadProviderServer).SelectDownLoadPath(ctx, req.(*SelectDownLoadPathIn))
	}
	return interceptor(ctx, in, info, handler)
}

func _DownloadProvider_GetDownloading_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDownloadingIn)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DownloadProviderServer).GetDownloading(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.DownloadProvider/GetDownloading",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DownloadProviderServer).GetDownloading(ctx, req.(*GetDownloadingIn))
	}
	return interceptor(ctx, in, info, handler)
}

func _DownloadProvider_GetDownloadFinish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDownloadFinishIn)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DownloadProviderServer).GetDownloadFinish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.DownloadProvider/GetDownloadFinish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DownloadProviderServer).GetDownloadFinish(ctx, req.(*GetDownloadFinishIn))
	}
	return interceptor(ctx, in, info, handler)
}

func _DownloadProvider_GetTrash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTrashIn)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DownloadProviderServer).GetTrash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.DownloadProvider/GetTrash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DownloadProviderServer).GetTrash(ctx, req.(*GetTrashIn))
	}
	return interceptor(ctx, in, info, handler)
}

func _DownloadProvider_NotifySteam_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(NotifyStreamIn)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DownloadProviderServer).NotifySteam(m, &downloadProviderNotifySteamServer{stream})
}

type DownloadProvider_NotifySteamServer interface {
	Send(*NotifyStreamOut) error
	grpc.ServerStream
}

type downloadProviderNotifySteamServer struct {
	grpc.ServerStream
}

func (x *downloadProviderNotifySteamServer) Send(m *NotifyStreamOut) error {
	return x.ServerStream.SendMsg(m)
}

var _DownloadProvider_serviceDesc = grpc.ServiceDesc{
	ServiceName: "server.DownloadProvider",
	HandlerType: (*DownloadProviderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddTask",
			Handler:    _DownloadProvider_AddTask_Handler,
		},
		{
			MethodName: "SelectDownLoadPath",
			Handler:    _DownloadProvider_SelectDownLoadPath_Handler,
		},
		{
			MethodName: "GetDownloading",
			Handler:    _DownloadProvider_GetDownloading_Handler,
		},
		{
			MethodName: "GetDownloadFinish",
			Handler:    _DownloadProvider_GetDownloadFinish_Handler,
		},
		{
			MethodName: "GetTrash",
			Handler:    _DownloadProvider_GetTrash_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "NotifySteam",
			Handler:       _DownloadProvider_NotifySteam_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "server.proto",
}
